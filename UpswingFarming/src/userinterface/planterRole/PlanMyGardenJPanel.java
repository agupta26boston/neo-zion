/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.planterRole;

import Business.Data.CropData;
import Business.Data.CropDataDirectory;
import Business.Data.CropMethodDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Network.SubNetwork;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kavyaprakash
 */
public class PlanMyGardenJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlanMyGardenJPanel
     */
    JPanel container;
    UserAccount account;
    CropDataDirectory cropDataDirectory;
    CropMethodDirectory cropMethodDirectory;
    
    public PlanMyGardenJPanel(JPanel container,UserAccount account, CropDataDirectory cropDataDirectory, CropMethodDirectory cropMethodDirectory) {
        initComponents();
        this.container = container;
        this.account = account;
        this.cropDataDirectory=cropDataDirectory;
        this.cropMethodDirectory=cropMethodDirectory;
//        planMyGardenJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/bk4.jpg")));
        populateLabel();
    }
    
    public void populateLabel(){
        for (CropData c : cropDataDirectory.getCropDataList()) {
           if (c.getCity().equalsIgnoreCase(account.getCity())){
               StateLabel.setText(account.getState());
               CityLabel.setText(account.getCity());
               
           }}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCrops = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        planMyGardenJLabel = new javax.swing.JLabel();
        BthTopCropsInMarket = new javax.swing.JButton();
        BthcheckFarmingMethods = new javax.swing.JButton();
        BtnTopCropsInArea = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CityLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        StateLabel = new javax.swing.JLabel();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel1.setText("CROPS AND METHODS");

        tblCrops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Season", "Crop1", "Crop2", "Crop3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCrops);
        if (tblCrops.getColumnModel().getColumnCount() > 0) {
            tblCrops.getColumnModel().getColumn(0).setResizable(false);
        }

        BthTopCropsInMarket.setText("Top crops in market");
        BthTopCropsInMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BthTopCropsInMarketActionPerformed(evt);
            }
        });

        BthcheckFarmingMethods.setText("Check farming methods ");
        BthcheckFarmingMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BthcheckFarmingMethodsActionPerformed(evt);
            }
        });

        BtnTopCropsInArea.setText("Top crops in area");
        BtnTopCropsInArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTopCropsInAreaActionPerformed(evt);
            }
        });

        jLabel2.setText("City:");

        CityLabel.setText("CityLabel");

        jLabel8.setText("State:");

        StateLabel.setText("StateLabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planMyGardenJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StateLabel)
                            .addComponent(CityLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnTopCropsInArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BthcheckFarmingMethods, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addComponent(BthTopCropsInMarket, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(203, 203, 203))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(planMyGardenJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(StateLabel))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(CityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(223, 223, 223))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(BtnTopCropsInArea, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(BthTopCropsInMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(BthcheckFarmingMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(619, 619, 619))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void BtnTopCropsInAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTopCropsInAreaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCrops.getModel();

        model.setRowCount(0);
       for (CropData c : cropDataDirectory.getCropDataList()) {
           if (c.getCity().equalsIgnoreCase(account.getCity())){
           
                Object[] row = new Object[4];
                row[0] = c;
                row[1] = c.getCrop1();
                row[2] = c.getCrop2();
                row[3] = c.getCrop3();
               model.addRow(row);
           }
               
                System.out.println(" "+c.getStateName()+" "+c.getCity()+" "+c.getSeason()+" "+c.getCrop1()+" "+c.getCrop2()+" "+c.getCrop3());
                  

            }

    }//GEN-LAST:event_BtnTopCropsInAreaActionPerformed

    private void BthcheckFarmingMethodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BthcheckFarmingMethodsActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = tblCrops.getSelectedRow();
        if (selectedRowCount < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to view");
        }
        else{
            CropData cropData = (CropData) tblCrops.getValueAt(selectedRowCount, 0);
            CheckFarmingMethodsJPanel JPanel = new CheckFarmingMethodsJPanel(container,cropData,cropMethodDirectory);
            container.add("CheckFarmingMethodsJPanel", JPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }
  
    }//GEN-LAST:event_BthcheckFarmingMethodsActionPerformed

    private void BthTopCropsInMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BthTopCropsInMarketActionPerformed
        // TODO add your handling code here:
        GraphJPanel graphJPanel = new GraphJPanel(container);
       container.add("graphJPanel", graphJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_BthTopCropsInMarketActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BthTopCropsInMarket;
    private javax.swing.JButton BthcheckFarmingMethods;
    private javax.swing.JButton BtnTopCropsInArea;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JLabel StateLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel planMyGardenJLabel;
    private javax.swing.JTable tblCrops;
    // End of variables declaration//GEN-END:variables
}
